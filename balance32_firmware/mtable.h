//ENTRY(ID,  var,                rightshift,     resolution,    unit,  name,                   minvalue,    maxvalue  )

ENTRY('1', controlState.targetSpeed,      0,          0.001,      "", "targetSpeed",             -300.0,       300.0  )
ENTRY('2', controlState.currentSpeed,     0,          0.001,      "", "currentSpeed",            -300.0,       300.0  )
ENTRY('3', controlState.targetVoltage,    0,       4.715e-4,     "V", "targetVoltage",              0.0,         2.0  )
ENTRY('4', controlState.currentVoltage,   0,       4.715e-4,     "V", "currentVoltage",             0.0,         2.0  )
ENTRY('5', sensorData.cpu[0],             0,            0.1,     "%", "cpu load 0",                 0.0,       100.0  )
ENTRY('6', sensorData.cpu[1],             0,            0.1,     "%", "cpu load 1",                 0.0,       100.0  )
ENTRY('7', sensorData.cpu[2],             0,            0.1,     "%", "cpu load 2",                 0.0,       100.0  )
ENTRY('8', sensorData.cpu[3],             0,            0.1,     "%", "cpu load 3",                 0.0,       100.0  )
ENTRY('9', sensorData.cpu[4],             0,            0.1,     "%", "cpu load 4",                 0.0,       100.0  )
ENTRY('q', sensorData.voltageRaw,         0,       4.715e-4,     "V", "solar voltage raw",          0.0,         2.0  )
ENTRY('w', controlState.speedDeviation,   0,          0.001,      "", "speedDeviation",          -300.0,       300.0  )
ENTRY('e', controlState.targetVoltageP + controlPara.voltageWP,   0,       4.715e-4,     "V", "targetVoltageP",             0.0,         2.0  )
ENTRY('r', controlState.targetVoltageI / 1000 + controlPara.voltageWP,   0,       4.715e-4,     "V", "targetVoltageI",             0.0,         2.0  )
ENTRY('t', controlState.voltageDeviation, 0,       4.715e-4,     "V", "voltageDeviation",          -1.0,         1.0  )
ENTRY('z', controlState.accP,             0,              1,      "", "accP",                   -2000.0,      6000.0  )
ENTRY('u', controlState.accD,             0,              1,      "", "accD",                   -2000.0,      6000.0  )
ENTRY('i', controlState.acc,              0,              1,      "", "acc",                    -2000.0,      6000.0  )
ENTRY(0,   sensorData.voltage,            0,            0.0,     "-", "end of table",               0.0,         0.0  )
